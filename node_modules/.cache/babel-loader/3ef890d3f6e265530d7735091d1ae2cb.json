{"ast":null,"code":"var _jsxFileName = \"/home/gabriella/Documentos/lar-ureto-front-end/src/components/plugin/Dustbin.jsx\";\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nconst style = {\n  border: '1px dashed gray',\n  width: '100%',\n  minHeight: '200px',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  color: '#222',\n  padding: '1rem',\n  textAlign: 'center',\n  fontSize: '1rem',\n  lineHeight: 'normal',\n  float: 'left',\n  display: 'flex',\n  alignItems: 'end',\n  flexWrap: 'wrap'\n};\nconst styleButtons = {\n  display: 'flex'\n};\n\nconst Dustbin = ({\n  accept,\n  lastDroppedItem,\n  onDrop,\n  droppedBoxNames\n}) => {\n  const [{\n    isOver,\n    canDrop\n  }, drop] = useDrop({\n    accept,\n    drop: onDrop,\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const isActive = isOver && canDrop;\n  let backgroundColor = 'white';\n\n  if (isActive) {\n    backgroundColor = 'darkgreen';\n  } else if (canDrop) {\n    backgroundColor = 'darkkhaki';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"selectedBox\",\n    ref: drop,\n    style: { ...style,\n      backgroundColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, isActive ? 'Solte o comando na área selecionada' : 'Arraste para montar Função'), lastDroppedItem && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      margin: 'auto',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, (() => {\n    const buttons = [];\n\n    for (let i = 0; i < droppedBoxNames.length; i++) {\n      if (i == droppedBoxNames.length - 1) {\n        buttons.push( /*#__PURE__*/React.createElement(\"button\", {\n          name: droppedBoxNames[i].name,\n          className: droppedBoxNames[i].classeName,\n          dangerouslySetInnerHTML: {\n            __html: droppedBoxNames[i].html\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 30\n          }\n        }));\n      } else {\n        buttons.push( /*#__PURE__*/React.createElement(\"button\", {\n          name: droppedBoxNames[i].name,\n          className: droppedBoxNames[i].classeName,\n          dangerouslySetInnerHTML: {\n            __html: droppedBoxNames[i].html\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 30\n          }\n        }));\n        buttons.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"linha\",\n          style: {\n            color: '#DDDDDD'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-long-arrow-right\",\n          \"aria-hidden\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 82\n          }\n        })));\n      }\n\n      if (droppedBoxNames[i].name == 'multiple') {\n        buttons.push( /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          name: \"numero\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 30\n          }\n        }));\n      }\n    }\n\n    console.log(buttons);\n    return buttons;\n  })()));\n};\n\nexport default Dustbin;","map":{"version":3,"sources":["/home/gabriella/Documentos/lar-ureto-front-end/src/components/plugin/Dustbin.jsx"],"names":["React","useDrop","style","border","width","minHeight","marginRight","marginBottom","color","padding","textAlign","fontSize","lineHeight","float","display","alignItems","flexWrap","styleButtons","Dustbin","accept","lastDroppedItem","onDrop","droppedBoxNames","isOver","canDrop","drop","collect","monitor","isActive","backgroundColor","flexDirection","margin","buttons","i","length","push","name","classeName","__html","html","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useDrop } from 'react-dnd'\nconst style = {\n  border: '1px dashed gray',\n  width: '100%',\n  minHeight: '200px',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  color: '#222',\n  padding: '1rem',\n  textAlign: 'center',\n  fontSize: '1rem',\n  lineHeight: 'normal',\n  float: 'left',\n  display: 'flex',\n  alignItems: 'end',\n  flexWrap: 'wrap',\n}\nconst styleButtons = {\n  display: 'flex',\n}\nconst Dustbin = ({ accept, lastDroppedItem, onDrop, droppedBoxNames}) => {\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept,\n    drop: onDrop,\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  })\n  const isActive = isOver && canDrop\n  let backgroundColor = 'white'\n  if (isActive) {\n    backgroundColor = 'darkgreen'\n  } else if (canDrop) {\n    backgroundColor = 'darkkhaki'\n  }\n  return (\n    <div id=\"selectedBox\" ref={drop} style={{ ...style, backgroundColor }}>\n      <p>{isActive\n        ? 'Solte o comando na área selecionada'\n        : 'Arraste para montar Função'}</p>\n\n      {lastDroppedItem && (\n        <div style={{ display: 'flex', flexDirection: 'row', margin: 'auto', alignItems: 'center'}}>\n          {(() => {\n            const buttons = [];\n            for (let i = 0; i < droppedBoxNames.length; i++) {\n              if(i == droppedBoxNames.length - 1){\n                buttons.push(<button \n                  name={droppedBoxNames[i].name} \n                  className={droppedBoxNames[i].classeName}\n                  dangerouslySetInnerHTML={{__html: droppedBoxNames[i].html}}\n                  ></button>);\n              } else{\n                buttons.push(<button \n                  name={droppedBoxNames[i].name} \n                  className={droppedBoxNames[i].classeName}\n                  dangerouslySetInnerHTML={{__html: droppedBoxNames[i].html}}\n                  ></button>);\n                buttons.push(<div className=\"linha\" style={{ color: '#DDDDDD' }}><i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\"></i></div>);\n              }\n              if(droppedBoxNames[i].name == 'multiple'){\n                buttons.push(<input type=\"number\" className=\"form-control\" name=\"numero\"/>);\n              }\n            }\n            console.log(buttons);\n            return buttons;\n          })()}\n        </div>\n      )}\n    </div>\n  )\n}\nexport default Dustbin\n\n"]},"metadata":{},"sourceType":"module"}