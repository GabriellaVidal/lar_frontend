{"ast":null,"code":"import _defineProperty from \"/home/gabriella/Documentos/lar_front_end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gabriella/Documentos/lar_front_end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gabriella/Documentos/lar_front_end/src/components/plugin/Dustbin.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\nconst style = {\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  width: '100%',\n  height: '200px',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  color: '#222',\n  padding: '1rem',\n  textAlign: 'center',\n  fontSize: '1rem',\n  lineHeight: 'normal',\n  float: 'left'\n};\nconst addedItem = '';\n\nconst Dustbin = () => {\n  const _useDrop = useDrop({\n    accept: ItemTypes.BOX,\n    drop: (item, monitor) => {\n      addedItem = item; // const name = 'Dustbin' \n\n      console.log(addedItem);\n      console.log(item);\n      console.log(monitor);\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  }),\n        _useDrop2 = _slicedToArray(_useDrop, 2),\n        _useDrop2$ = _useDrop2[0],\n        canDrop = _useDrop2$.canDrop,\n        isOver = _useDrop2$.isOver,\n        drop = _useDrop2[1];\n\n  const isActive = canDrop && isOver;\n  let backgroundColor = 'white';\n\n  if (isActive) {\n    backgroundColor = 'darkgreen';\n  } else if (canDrop) {\n    backgroundColor = 'darkkhaki';\n  }\n\n  return React.createElement(\"div\", {\n    id: \"selecao\",\n    ref: drop,\n    style: _objectSpread({}, style, {\n      backgroundColor\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, isActive ? 'Release to drop' : 'Drag a box here');\n};\n\nexport default Dustbin;","map":{"version":3,"sources":["/home/gabriella/Documentos/lar_front_end/src/components/plugin/Dustbin.jsx"],"names":["React","useDrop","ItemTypes","style","border","backgroundColor","width","height","marginRight","marginBottom","color","padding","textAlign","fontSize","lineHeight","float","addedItem","Dustbin","accept","BOX","drop","item","monitor","console","log","collect","isOver","canDrop","isActive"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,iBADI;AAEZC,EAAAA,eAAe,EAAE,OAFL;AAGZC,EAAAA,KAAK,EAAE,MAHK;AAIZC,EAAAA,MAAM,EAAE,OAJI;AAKZC,EAAAA,WAAW,EAAE,QALD;AAMZC,EAAAA,YAAY,EAAE,QANF;AAOZC,EAAAA,KAAK,EAAE,MAPK;AAQZC,EAAAA,OAAO,EAAE,MARG;AASZC,EAAAA,SAAS,EAAE,QATC;AAUZC,EAAAA,QAAQ,EAAE,MAVE;AAWZC,EAAAA,UAAU,EAAE,QAXA;AAYZC,EAAAA,KAAK,EAAE;AAZK,CAAd;AAcA,MAAMC,SAAS,GAAG,EAAlB;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA,mBACehB,OAAO,CAAC;AACzCiB,IAAAA,MAAM,EAAEhB,SAAS,CAACiB,GADuB;AAEzCC,IAAAA,IAAI,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACvBN,MAAAA,SAAS,GAAGK,IAAZ,CADuB,CAEvB;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KARwC;AASzCG,IAAAA,OAAO,EAAEH,OAAO,KAAK;AACnBI,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAAR,EADW;AAEnBC,MAAAA,OAAO,EAAEL,OAAO,CAACK,OAAR;AAFU,KAAL;AATyB,GAAD,CADtB;AAAA;AAAA;AAAA,QACXA,OADW,cACXA,OADW;AAAA,QACFD,MADE,cACFA,MADE;AAAA,QACON,IADP;;AAepB,QAAMQ,QAAQ,GAAGD,OAAO,IAAID,MAA5B;AACA,MAAIrB,eAAe,GAAG,OAAtB;;AACA,MAAIuB,QAAJ,EAAc;AACZvB,IAAAA,eAAe,GAAG,WAAlB;AACD,GAFD,MAEO,IAAIsB,OAAJ,EAAa;AAClBtB,IAAAA,eAAe,GAAG,WAAlB;AACD;;AACD,SACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,GAAG,EAAEe,IAAvB;AAA6B,IAAA,KAAK,oBAAOjB,KAAP;AAAcE,MAAAA;AAAd,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGuB,QAAQ,GAAG,iBAAH,GAAuB,iBADlC,CADF;AAKD,CA3BD;;AA4BA,eAAeX,OAAf","sourcesContent":["import React from 'react'\nimport { useDrop } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\n\nconst style = {\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  width: '100%',\n  height: '200px',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  color: '#222',\n  padding: '1rem',\n  textAlign: 'center',\n  fontSize: '1rem',\n  lineHeight: 'normal',\n  float: 'left',\n}\nconst addedItem = '';\nconst Dustbin = () => {\n  const [{ canDrop, isOver}, drop] = useDrop({\n    accept: ItemTypes.BOX,\n    drop: (item, monitor) => {\n      addedItem = item;\n      // const name = 'Dustbin' \n      console.log(addedItem);\n      console.log(item);\n      console.log(monitor);\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  })\n  const isActive = canDrop && isOver\n  let backgroundColor = 'white'\n  if (isActive) {\n    backgroundColor = 'darkgreen'\n  } else if (canDrop) {\n    backgroundColor = 'darkkhaki'\n  }\n  return (\n    <div id=\"selecao\" ref={drop} style={{ ...style, backgroundColor }}>\n      {isActive ? 'Release to drop' : 'Drag a box here'}\n    </div>\n  )\n}\nexport default Dustbin\n"]},"metadata":{},"sourceType":"module"}