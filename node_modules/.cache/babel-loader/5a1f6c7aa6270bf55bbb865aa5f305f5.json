{"ast":null,"code":"import _defineProperty from \"/home/gabriella/Documentos/lar_front_end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gabriella/Documentos/lar_front_end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gabriella/Documentos/lar_front_end/src/components/plugin/Box.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\nconst style = {// border: '1px dashed gray',\n  // backgroundColor: 'white',\n  // padding: '0.5rem 1rem',\n  // marginRight: '1.5rem',\n  // marginBottom: '1.5rem',\n  // cursor: 'move',\n  // float: 'left',\n};\n\nconst Box = ({\n  content,\n  classe\n}) => {\n  const _useDrag = useDrag({\n    item: {\n      content,\n      type: ItemTypes.BOX\n    },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n\n      if (item && dropResult) {\n        alert(\"You dropped \".concat(item.content, \" into \").concat(dropResult.content, \"!\"));\n      }\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  }),\n        _useDrag2 = _slicedToArray(_useDrag, 2),\n        isDragging = _useDrag2[0].isDragging,\n        drag = _useDrag2[1];\n\n  const opacity = isDragging ? 0.4 : 1;\n  return React.createElement(\"button\", {\n    class: classe,\n    ref: drag,\n    style: _objectSpread({}, style, {\n      opacity\n    }),\n    dangerouslySetInnerHTML: {\n      __html: content\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n};\n\nexport default Box;","map":{"version":3,"sources":["/home/gabriella/Documentos/lar_front_end/src/components/plugin/Box.jsx"],"names":["React","useDrag","ItemTypes","style","Box","content","classe","item","type","BOX","end","monitor","dropResult","getDropResult","alert","collect","isDragging","drag","opacity","__html"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,KAAK,GAAG,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AAPY,CAAd;;AAUA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AAAA,mBACJL,OAAO,CAAC;AACrCM,IAAAA,IAAI,EAAE;AAAEF,MAAAA,OAAF;AAAWG,MAAAA,IAAI,EAAEN,SAAS,CAACO;AAA3B,KAD+B;AAErCC,IAAAA,GAAG,EAAE,CAACH,IAAD,EAAOI,OAAP,KAAmB;AACtB,YAAMC,UAAU,GAAGD,OAAO,CAACE,aAAR,EAAnB;;AACA,UAAIN,IAAI,IAAIK,UAAZ,EAAwB;AACtBE,QAAAA,KAAK,uBAAgBP,IAAI,CAACF,OAArB,mBAAqCO,UAAU,CAACP,OAAhD,OAAL;AACD;AACF,KAPoC;AAQrCU,IAAAA,OAAO,EAAEJ,OAAO,KAAK;AACnBK,MAAAA,UAAU,EAAEL,OAAO,CAACK,UAAR;AADO,KAAL;AARqB,GAAD,CADH;AAAA;AAAA,QAC1BA,UAD0B,gBAC1BA,UAD0B;AAAA,QACZC,IADY;;AAanC,QAAMC,OAAO,GAAGF,UAAU,GAAG,GAAH,GAAS,CAAnC;AACA,SACE;AAAQ,IAAA,KAAK,EAAEV,MAAf;AAAuB,IAAA,GAAG,EAAEW,IAA5B;AAAkC,IAAA,KAAK,oBAAOd,KAAP;AAAce,MAAAA;AAAd,MAAvC;AAAgE,IAAA,uBAAuB,EAAE;AAACC,MAAAA,MAAM,EAAEd;AAAT,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAnBD;;AAoBA,eAAeD,GAAf","sourcesContent":["import React from 'react'\nimport { useDrag } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\n\nconst style = {\n  // border: '1px dashed gray',\n  // backgroundColor: 'white',\n  // padding: '0.5rem 1rem',\n  // marginRight: '1.5rem',\n  // marginBottom: '1.5rem',\n  // cursor: 'move',\n  // float: 'left',\n}\n\nconst Box = ({ content, classe }) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { content, type: ItemTypes.BOX },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult()\n      if (item && dropResult) {\n        alert(`You dropped ${item.content} into ${dropResult.content}!`)\n      }\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0.4 : 1\n  return (\n    <button class={classe} ref={drag} style={{ ...style, opacity }} dangerouslySetInnerHTML={{__html: content}}>\n      \n    </button>\n  )\n}\nexport default Box\n"]},"metadata":{},"sourceType":"module"}