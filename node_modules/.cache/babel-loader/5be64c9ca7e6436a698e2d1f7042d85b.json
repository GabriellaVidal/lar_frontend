{"ast":null,"code":"import _defineProperty from \"/home/gabriella/Documentos/lar_front_end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gabriella/Documentos/lar_front_end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gabriella/Documentos/lar_front_end/src/components/plugin/example.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback } from 'react';\nimport Dustbin from './Dustbin';\nimport Box from './Box';\nimport ItemTypes from './ItemTypes';\nimport update from 'immutability-helper';\nconst style = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-between',\n  flexDirection: 'row'\n};\n\nconst Container = () => {\n  const _useState = useState([{\n    accepts: [ItemTypes.BOX],\n    lastDroppedItem: null\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dustbins = _useState2[0],\n        setDustbins = _useState2[1];\n\n  const _useState3 = useState([{\n    name: 'left',\n    classeName: 'btn btn-success',\n    html: '<i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }, {\n    name: 'up',\n    classeName: 'btn btn-success',\n    html: '<i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }, {\n    name: 'stop',\n    classeName: 'btn btn-danger',\n    html: '<i class=\"fa fa-stop\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }, {\n    name: 'down',\n    classeName: 'btn btn-success',\n    html: '<i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }, {\n    name: 'right',\n    classeName: 'btn btn-success',\n    html: '<i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }, {\n    name: 'function',\n    classeName: 'btn btn-info',\n    html: '<i class=\"fa fa-cog\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }]),\n        _useState4 = _slicedToArray(_useState3, 1),\n        boxes = _useState4[0];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        droppedBoxNames = _useState6[0],\n        setDroppedBoxNames = _useState6[1];\n\n  function isDropped(boxName) {\n    return droppedBoxNames.indexOf(boxName) > -1;\n  }\n\n  const handleDrop = useCallback((index, item) => {\n    const name = item.name;\n    setDroppedBoxNames(update(droppedBoxNames, name ? {\n      $push: [item]\n    } : {\n      $push: []\n    }));\n    setDustbins(update(dustbins, {\n      [index]: {\n        lastDroppedItem: {\n          $set: item\n        }\n      }\n    }));\n  }, [droppedBoxNames, dustbins]);\n  return React.createElement(\"div\", {\n    class: \"row\",\n    style: _objectSpread({}, style),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col-sm-12 diviser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"col-sm-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, dustbins.map(({\n    accepts,\n    lastDroppedItem\n  }, index) => React.createElement(Dustbin, {\n    accept: accepts,\n    lastDroppedItem: lastDroppedItem,\n    droppedBoxNames: droppedBoxNames,\n    onDrop: item => handleDrop(index, item),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"col-sm-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, dustbins.map(({\n    accepts,\n    lastDroppedItem\n  }, index) => React.createElement(Dustbin, {\n    accept: accepts,\n    lastDroppedItem: lastDroppedItem,\n    droppedBoxNames: droppedBoxNames,\n    onDrop: item => handleDrop(index, item),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    class: \"col-sm-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, dustbins.map(({\n    accepts,\n    lastDroppedItem\n  }, index) => React.createElement(Dustbin, {\n    accept: accepts,\n    lastDroppedItem: lastDroppedItem,\n    droppedBoxNames: droppedBoxNames,\n    onDrop: item => handleDrop(index, item),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    class: \"col-sm-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, dustbins.map(({\n    accepts,\n    lastDroppedItem\n  }, index) => React.createElement(Dustbin, {\n    accept: accepts,\n    lastDroppedItem: lastDroppedItem,\n    droppedBoxNames: droppedBoxNames,\n    onDrop: item => handleDrop(index, item),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both',\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, boxes.map(({\n    name,\n    classeName,\n    html,\n    type\n  }, index) => React.createElement(Box, {\n    name: name,\n    classeName: classeName,\n    html: html,\n    type: type,\n    isDropped: isDropped(name),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))));\n};\n\nexport default Container;","map":{"version":3,"sources":["/home/gabriella/Documentos/lar_front_end/src/components/plugin/example.jsx"],"names":["React","useState","useCallback","Dustbin","Box","ItemTypes","update","style","display","flexWrap","justifyContent","flexDirection","Container","accepts","BOX","lastDroppedItem","dustbins","setDustbins","name","classeName","html","type","boxes","droppedBoxNames","setDroppedBoxNames","isDropped","boxName","indexOf","handleDrop","index","item","$push","$set","overflow","clear","map"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport Dustbin from './Dustbin'\nimport Box from './Box'\nimport ItemTypes from './ItemTypes'\nimport update from 'immutability-helper'\nconst style = {\n  display: 'flex', \n  flexWrap: 'wrap', \n  justifyContent: 'space-between', \n  flexDirection: 'row'\n}\nconst Container = () => {\n  const [dustbins, setDustbins] = useState([\n    { accepts: [ItemTypes.BOX], lastDroppedItem: null },\n  ])\n  const [boxes] = useState([\n    { name: 'left', classeName: 'btn btn-success', html: '<i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n    { name: 'up', classeName: 'btn btn-success', html: '<i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n    { name: 'stop', classeName: 'btn btn-danger', html: '<i class=\"fa fa-stop\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n    { name: 'down', classeName: 'btn btn-success', html: '<i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n    { name: 'right', classeName: 'btn btn-success', html: '<i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n    { name: 'function', classeName: 'btn btn-info', html: '<i class=\"fa fa-cog\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n  ])\n  const [droppedBoxNames, setDroppedBoxNames] = useState([])\n  function isDropped(boxName) {\n    return droppedBoxNames.indexOf(boxName) > -1\n  }\n  const handleDrop = useCallback(\n    (index, item) => {\n      const { name } = item\n      setDroppedBoxNames(\n        update(droppedBoxNames, name ? { $push: [item] } : { $push: [] }),\n      )\n      setDustbins(\n        update(dustbins, {\n          [index]: {\n            lastDroppedItem: {\n              $set: item,\n            },\n          },\n        }),\n      )\n    },\n    [droppedBoxNames, dustbins],\n  )\n  return (\n    <div class=\"row\" style={{ ...style}}>\n      <div class=\"col-sm-12 diviser\">\n        <hr></hr>\n      </div>\n      <div class=\"col-sm-3\">\n        <div style={{ overflow: 'hidden', clear: 'both' }}>\n          {dustbins.map(({ accepts, lastDroppedItem }, index) => (\n            <Dustbin\n              accept={accepts}\n              lastDroppedItem={lastDroppedItem}\n              droppedBoxNames={droppedBoxNames}\n              onDrop={item => handleDrop(index, item)}\n              key={index}\n            />\n          ))}\n        </div>\n        <hr></hr>\n      </div>\n      <div class=\"col-sm-3\">\n        <div style={{ overflow: 'hidden', clear: 'both' }}>\n          {dustbins.map(({ accepts, lastDroppedItem }, index) => (\n            <Dustbin\n              accept={accepts}\n              lastDroppedItem={lastDroppedItem}\n              droppedBoxNames={droppedBoxNames}\n              onDrop={item => handleDrop(index, item)}\n              key={index}\n            />\n          ))}\n        </div>\n      </div>\n      <div class=\"col-sm-3\">\n        <div style={{ overflow: 'hidden', clear: 'both' }}>\n          {dustbins.map(({ accepts, lastDroppedItem }, index) => (\n            <Dustbin\n              accept={accepts}\n              lastDroppedItem={lastDroppedItem}\n              droppedBoxNames={droppedBoxNames}\n              onDrop={item => handleDrop(index, item)}\n              key={index}\n            />\n          ))}\n        </div>\n      </div>\n      <div class=\"col-sm-3\">\n        <div style={{ overflow: 'hidden', clear: 'both' }}>\n          {dustbins.map(({ accepts, lastDroppedItem }, index) => (\n            <Dustbin\n              accept={accepts}\n              lastDroppedItem={lastDroppedItem}\n              droppedBoxNames={droppedBoxNames}\n              onDrop={item => handleDrop(index, item)}\n              key={index}\n            />\n          ))}\n        </div>\n      </div>\n\n      <div style={{ overflow: 'hidden', clear: 'both', display: 'flex' }}>\n        {boxes.map(({ name, classeName, html, type }, index) => (\n          <Box\n            name={name}\n            classeName={classeName}\n            html={html}\n            type={type}\n            isDropped={isDropped(name)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\nexport default Container\n"]},"metadata":{},"sourceType":"module"}