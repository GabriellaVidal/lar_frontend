{"ast":null,"code":"import _slicedToArray from \"/home/gabriella/Documentos/lar_front_end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gabriella/Documentos/lar_front_end/src/components/plugin/example.jsx\";\nimport React, { useState, useCallback } from 'react';\nimport { NativeTypes } from 'react-dnd-html5-backend';\nimport Dustbin from './Dustbin';\nimport Box from './Box';\nimport ItemTypes from './ItemTypes';\nimport update from 'immutability-helper';\n\nconst Container = () => {\n  const _useState = useState([{\n    accepts: [ItemTypes.BOX],\n    lastDroppedItem: null\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dustbins = _useState2[0],\n        setDustbins = _useState2[1];\n\n  const _useState3 = useState([{\n    classeName: 'btn btn-success',\n    html: '<i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }, {\n    classeName: 'btn btn-success',\n    html: '<i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }, {\n    classeName: 'btn btn-danges',\n    html: '<i class=\"fa fa-stop\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }, {\n    classeName: 'btn btn-success',\n    html: '<i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }, {\n    classeName: 'btn btn-success',\n    html: '<i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>',\n    type: ItemTypes.BOX\n  }]),\n        _useState4 = _slicedToArray(_useState3, 1),\n        boxes = _useState4[0];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        droppedBoxNames = _useState6[0],\n        setDroppedBoxNames = _useState6[1];\n\n  function isDropped(boxName) {\n    return droppedBoxNames.indexOf(boxName) > -1;\n  }\n\n  const handleDrop = useCallback((index, item) => {\n    const name = item.name;\n    setDroppedBoxNames(update(droppedBoxNames, name ? {\n      $push: [name]\n    } : {\n      $push: []\n    }));\n    setDustbins(update(dustbins, {\n      [index]: {\n        lastDroppedItem: {\n          $set: item\n        }\n      }\n    }));\n  }, [droppedBoxNames, dustbins]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, dustbins.map(({\n    accepts,\n    lastDroppedItem\n  }, index) => React.createElement(Dustbin, {\n    accept: accepts,\n    lastDroppedItem: lastDroppedItem,\n    onDrop: item => handleDrop(index, item),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, boxes.map(({\n    name,\n    type\n  }, index) => React.createElement(Box, {\n    name: name,\n    type: type,\n    isDropped: isDropped(name),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))));\n};\n\nexport default Container;","map":{"version":3,"sources":["/home/gabriella/Documentos/lar_front_end/src/components/plugin/example.jsx"],"names":["React","useState","useCallback","NativeTypes","Dustbin","Box","ItemTypes","update","Container","accepts","BOX","lastDroppedItem","dustbins","setDustbins","classeName","html","type","boxes","droppedBoxNames","setDroppedBoxNames","isDropped","boxName","indexOf","handleDrop","index","item","name","$push","$set","overflow","clear","map"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport Dustbin from './Dustbin'\nimport Box from './Box'\nimport ItemTypes from './ItemTypes'\nimport update from 'immutability-helper'\nconst Container = () => {\n  const [dustbins, setDustbins] = useState([\n    { accepts: [ItemTypes.BOX], lastDroppedItem: null },\n  ])\n  const [boxes] = useState([\n    { classeName: 'btn btn-success', html: '<i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n    { classeName: 'btn btn-success', html: '<i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n    { classeName: 'btn btn-danges', html: '<i class=\"fa fa-stop\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n    { classeName: 'btn btn-success', html: '<i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n    { classeName: 'btn btn-success', html: '<i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>', type: ItemTypes.BOX },\n  ])\n  const [droppedBoxNames, setDroppedBoxNames] = useState([])\n  function isDropped(boxName) {\n    return droppedBoxNames.indexOf(boxName) > -1\n  }\n  const handleDrop = useCallback(\n    (index, item) => {\n      const { name } = item\n      setDroppedBoxNames(\n        update(droppedBoxNames, name ? { $push: [name] } : { $push: [] }),\n      )\n      setDustbins(\n        update(dustbins, {\n          [index]: {\n            lastDroppedItem: {\n              $set: item,\n            },\n          },\n        }),\n      )\n    },\n    [droppedBoxNames, dustbins],\n  )\n  return (\n    <div>\n      <div style={{ overflow: 'hidden', clear: 'both' }}>\n        {dustbins.map(({ accepts, lastDroppedItem }, index) => (\n          <Dustbin\n            accept={accepts}\n            lastDroppedItem={lastDroppedItem}\n            onDrop={item => handleDrop(index, item)}\n            key={index}\n          />\n        ))}\n      </div>\n\n      <div style={{ overflow: 'hidden', clear: 'both' }}>\n        {boxes.map(({ name, type }, index) => (\n          <Box\n            name={name}\n            type={type}\n            isDropped={isDropped(name)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\nexport default Container\n"]},"metadata":{},"sourceType":"module"}