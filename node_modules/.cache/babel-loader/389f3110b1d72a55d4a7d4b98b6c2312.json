{"ast":null,"code":"import _slicedToArray from \"/home/gabriella/Documentos/lar_front_end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gabriella/Documentos/lar_front_end/src/components/plugin/Box.jsx\";\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\n\nconst Box = ({\n  name,\n  classe,\n  html,\n  type,\n  isDropped\n}) => {\n  const _useDrag = useDrag({\n    item: {\n      name,\n      classe,\n      html,\n      type\n    },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1\n    })\n  }),\n        _useDrag2 = _slicedToArray(_useDrag, 2),\n        opacity = _useDrag2[0].opacity,\n        drag = _useDrag2[1];\n\n  return React.createElement(\"button\", {\n    name: name,\n    className: classe,\n    ref: drag,\n    dangerouslySetInnerHTML: {\n      __html: html\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  });\n};\n\nexport default Box;","map":{"version":3,"sources":["/home/gabriella/Documentos/lar_front_end/src/components/plugin/Box.jsx"],"names":["React","useDrag","Box","name","classe","html","type","isDropped","item","collect","monitor","opacity","isDragging","drag","__html"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AACA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA,IAAtB;AAA4BC,EAAAA;AAA5B,CAAD,KAA6C;AAAA,mBAC5BN,OAAO,CAAC;AACjCO,IAAAA,IAAI,EAAE;AAAEL,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,IAAhB;AAAsBC,MAAAA;AAAtB,KAD2B;AAEjCG,IAAAA,OAAO,EAAEC,OAAO,KAAK;AACnBC,MAAAA,OAAO,EAAED,OAAO,CAACE,UAAR,KAAuB,GAAvB,GAA6B;AADnB,KAAL;AAFiB,GAAD,CADqB;AAAA;AAAA,QAC9CD,OAD8C,gBAC9CA,OAD8C;AAAA,QACpCE,IADoC;;AAOvD,SACE;AAAQ,IAAA,IAAI,EAAEV,IAAd;AAAoB,IAAA,SAAS,EAAEC,MAA/B;AAAuC,IAAA,GAAG,EAAES,IAA5C;AACA,IAAA,uBAAuB,EAAE;AAACC,MAAAA,MAAM,EAAET;AAAT,KADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAZD;;AAaA,eAAeH,GAAf","sourcesContent":["import React from 'react'\nimport { useDrag } from 'react-dnd'\nconst Box = ({ name, classe, html, type, isDropped }) => {\n  const [{ opacity },drag] = useDrag({\n    item: { name, classe, html, type },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n    }),\n  })\n  return (\n    <button name={name} className={classe} ref={drag} \n    dangerouslySetInnerHTML={{__html: html}}>\n    </button>\n  )\n}\nexport default Box\n"]},"metadata":{},"sourceType":"module"}