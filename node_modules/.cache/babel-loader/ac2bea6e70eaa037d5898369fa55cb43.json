{"ast":null,"code":"var _jsxFileName = \"/home/gabriella/Documentos/lar_front_end/src/pages/Authorizations.js\";\nimport React, { Component } from 'react';\nimport { isAuthenticated } from '../services/auth';\nimport { Redirect } from 'react-router';\nimport Footer from '../components/Footer';\nimport AuthorizationCard from \"../components/AuthorizationCard\";\nimport \"../components/Authorization.css\";\nimport api from \"../services/api\";\n\nclass Authorizations extends Component {\n  constructor(props) {\n    super(props);\n\n    this.populateDevices = async () => {\n      const request = await api.get('/device');\n\n      if (request !== undefined) {\n        this.setState({\n          devices: request.data.devices\n        });\n        console.log(this.state.devices);\n      }\n    };\n\n    this.populateUsers = async () => {\n      const request = await api.get('/auth/users');\n\n      if (request !== undefined) {\n        this.setState({\n          users: request.data.users\n        });\n        console.log(this.state.users);\n      }\n    };\n\n    this.populateAuthorizations = async () => {\n      const request = await api.get('/authorization/full');\n\n      if (request !== undefined) {\n        this.setState({\n          authorizations: request.data.authorizations\n        });\n        console.log(this.state.authorizations);\n      }\n    };\n\n    this.submitAuthorization = this.submitAuthorization.bind(this);\n    this.handleChangeDevices = this.handleChangeDevices.bind(this);\n    this.handleChangeUsers = this.handleChangeUsers.bind(this);\n    this.state = {\n      selectedIdUser: \"\",\n      selectedIdDevice: \"\",\n      devices: [],\n      selectedDevice: \"\",\n      users: [],\n      error: \"\",\n      authorizations: []\n    };\n  }\n\n  async submitAuthorization(e) {\n    this.setState({\n      error: 0\n    });\n    e.preventDefault();\n    let device = this.state.selectedIdDevice;\n    let user = this.state.selectedIdUser;\n    const enabled = true;\n\n    if (!device) {\n      device = this.state.devices[0]._id;\n    }\n\n    if (!user) {\n      user = this.state.users[0]._id;\n    }\n\n    try {\n      console.log(\"inserir autorização\");\n      console.log(device + \" \" + user);\n      const response = await api.post(\"/authorization\", {\n        device,\n        user,\n        enabled\n      });\n\n      if (response.data.authorization._id !== \"\") {\n        alert(\"Autorização cadastrada com sucesso!\");\n      }\n\n      console.log(response.data);\n    } catch (err) {\n      this.setState({\n        error: \"Houve um problema no cadastro de autorização.\"\n      });\n    }\n\n    if (this.state.error !== 0) {\n      alert(this.state.error);\n      console.log(\"Error:\" + this.state.error + \"!\");\n    }\n  }\n\n  async clickAndar(e) {\n    // this.setState({ error: 0}); \n    e.preventDefault();\n    let device = e;\n    const enabled = true;\n\n    try {\n      const response = await api.post(\"/device/andar\", {\n        device,\n        user\n      }); // if ( response.data.authorization._id !== \"\" ){\n\n      alert(\"Autorização cadastrada com sucesso!\"); // s}\n\n      console.log(response.data);\n    } catch (err) {\n      this.setState({\n        error: \"Houve um problema no cadastro de autorização.\"\n      });\n    }\n\n    if (this.state.error !== 0) {\n      alert(this.state.error);\n      console.log(\"Error:\" + this.state.error + \"!\");\n    }\n  }\n\n  handleChangeDevices(e) {\n    //console.log('Seleção Dispositivo: ' + e.target.value); \n    this.setState({\n      selectedIdDevice: this.state.devices[e.target.value]._id\n    });\n  }\n\n  handleChangeUsers(e) {\n    //console.log('Seleção Usuários: ' + e.target.value); \n    this.setState({\n      selectedIdUser: this.state.users[e.target.value]._id\n    });\n  }\n\n  async componentDidMount() {\n    if (isAuthenticated()) {\n      document.title = \"Autorizações\";\n      await this.populateDevices();\n      await this.populateUsers();\n      await this.populateAuthorizations();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, !isAuthenticated() ? React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      id: \"auth_card_edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" Autoriza\\xE7\\xE3o \"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"selectDevices\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Dispositivos:\"), React.createElement(\"select\", {\n      className: \"form-control\",\n      value: this.state.value,\n      onChange: this.handleChangeDevices,\n      id: \"selectedIdDevice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.devices.map((device, index) => React.createElement(\"option\", {\n      value: index,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, device.name)))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"selectUsers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Usu\\xE1rios:\"), React.createElement(\"select\", {\n      className: \"form-control\",\n      value: this.state.value,\n      onChange: this.handleChangeUsers,\n      id: \"selectUsers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.users.map((user, index) => React.createElement(\"option\", {\n      value: index,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, user.userName)))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.submitAuthorization,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Autorizar\")))), React.createElement(\"section\", {\n      id: \"auth-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.authorizations.map((authori, index) => React.createElement(AuthorizationCard, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, authori)))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Authorizations;","map":{"version":3,"sources":["/home/gabriella/Documentos/lar_front_end/src/pages/Authorizations.js"],"names":["React","Component","isAuthenticated","Redirect","Footer","AuthorizationCard","api","Authorizations","constructor","props","populateDevices","request","get","undefined","setState","devices","data","console","log","state","populateUsers","users","populateAuthorizations","authorizations","submitAuthorization","bind","handleChangeDevices","handleChangeUsers","selectedIdUser","selectedIdDevice","selectedDevice","error","e","preventDefault","device","user","enabled","_id","response","post","authorization","alert","err","clickAndar","target","value","componentDidMount","document","title","render","map","index","name","userName","authori"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { isAuthenticated } from '../services/auth'; \nimport { Redirect } from 'react-router'\nimport Footer from '../components/Footer'; \nimport AuthorizationCard from \"../components/AuthorizationCard\"\n\nimport \"../components/Authorization.css\" \n\nimport api from \"../services/api\";\n\n\nclass Authorizations extends Component { \n    constructor(props){ \n        super(props);\n        this.submitAuthorization = this.submitAuthorization.bind(this);\n        this.handleChangeDevices = this.handleChangeDevices.bind(this); \n        this.handleChangeUsers = this.handleChangeUsers.bind(this); \n        \n        this.state = {\n            selectedIdUser: \"\",\n            selectedIdDevice: \"\", \n            devices: [],\n            selectedDevice: \"\",\n            users: [], \n            error: \"\",\n            authorizations: []\n        };\n    \n    }\n\n    async submitAuthorization(e){\n\n        this.setState({ error: 0}); \n        e.preventDefault();\n        let device = this.state.selectedIdDevice; \n        let user = this.state.selectedIdUser; \n        const enabled = true; \n        if ( ! device  ) {\n            device =  this.state.devices[0]._id; \n        }\n        if ( ! user ){\n            user =  this.state.users[0]._id; \n        }\n        try {\n            console.log(\"inserir autorização\"); \n            console.log(device+\" \"+user);\n            const response = await api.post(\"/authorization\", {device, user, enabled });\n\n            if ( response.data.authorization._id !== \"\" ){\n                alert(\"Autorização cadastrada com sucesso!\"); \n            }\n            console.log(response.data); \n                \n        } catch (err) {\n            this.setState({\n            error:\n                \"Houve um problema no cadastro de autorização.\"\n            });\n        }\n\n        if (  this.state.error !== 0  ){\n            alert(this.state.error);\n            console.log(\"Error:\"+this.state.error+\"!\");\n        } \n    }\n\n    async clickAndar(e){\n\n        // this.setState({ error: 0}); \n        e.preventDefault();\n        let device = e; \n        const enabled = true; \n        \n        try {\n            \n            const response = await api.post(\"/device/andar\", {device, user});\n\n            // if ( response.data.authorization._id !== \"\" ){\n                alert(\"Autorização cadastrada com sucesso!\"); \n            // s}\n            console.log(response.data); \n                \n        } catch (err) {\n            this.setState({\n            error:\n                \"Houve um problema no cadastro de autorização.\"\n            });\n        }\n\n        if (  this.state.error !== 0  ){\n            alert(this.state.error);\n            console.log(\"Error:\"+this.state.error+\"!\");\n        } \n    }\n\n    populateDevices = async () => {\n        const request = await api.get('/device');\n        if(request !== undefined){\n            this.setState({devices: request.data.devices}); \n            console.log(this.state.devices); \n        }\n    }\n\n    populateUsers = async () => {\n        const request = await api.get('/auth/users');\n        if(request !== undefined){\n            this.setState({users: request.data.users}); \n            console.log(this.state.users); \n        }\n    }\n\n    populateAuthorizations = async () => {\n        const request = await api.get('/authorization/full');\n        if(request !== undefined){\n            this.setState({authorizations: request.data.authorizations}); \n            console.log(this.state.authorizations); \n        }\n    }\n        \n\n    handleChangeDevices(e) {\n        //console.log('Seleção Dispositivo: ' + e.target.value); \n        this.setState({ selectedIdDevice: this.state.devices[e.target.value]._id})\n    }\n\n    handleChangeUsers(e) {\n        //console.log('Seleção Usuários: ' + e.target.value); \n        this.setState({selectedIdUser: this.state.users[e.target.value]._id})\n    }\n\n    async componentDidMount() {\n\n        if (isAuthenticated()) {\n            document.title = \"Autorizações\";\n            await this.populateDevices();\n            await this.populateUsers();\n            await this.populateAuthorizations();  \n        }\n    }\n\n    render() {\n        return ( \n            <div >\n                { (!isAuthenticated() ) ? \n                <Redirect to=\"/login\"/> : \n            <div className=\"container\"> \n \n\n\n\n            <div className=\"card\" id=\"auth_card_edit\">\n            <div className=\"card-body\">\n\n                <form>\n                    <h3> Autorização </h3>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"selectDevices\">Dispositivos:</label>\n                        <select className=\"form-control\"  value={this.state.value} onChange={this.handleChangeDevices} id=\"selectedIdDevice\">\n\n\n                            {this.state.devices.map((device, index) => (\n                                <option value={index} key={index}>{device.name}</option>\n                            ))}\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"selectUsers\">Usuários:</label>\n                        <select className=\"form-control\"  value={this.state.value} onChange={this.handleChangeUsers} id=\"selectUsers\">\n\n\n                            {this.state.users.map((user, index) => (\n                                <option value={index} key={index}>{user.userName}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\"onClick={this.submitAuthorization} >Autorizar</button>\n                    \n                    \n                </form>\n            </div>\n            </div>\n\n            <section id=\"auth-list\">\n            {this.state.authorizations.map((authori, index) => (\n                <AuthorizationCard key={index}>\n                {authori}\n                </AuthorizationCard>\n            ))}\n            </section>\n\n            </div> \n            }\n            <Footer>\n\n            </Footer>\n            </div>\n        );\n    }\n}\n\nexport default Authorizations; \n"]},"metadata":{},"sourceType":"module"}