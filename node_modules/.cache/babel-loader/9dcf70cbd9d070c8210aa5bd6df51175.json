{"ast":null,"code":"import _slicedToArray from \"/home/gabriella/Documentos/lar_front_end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gabriella/Documentos/lar_front_end/src/components/plugin/Container.jsx\";\nimport React, { useState, useCallback } from 'react';\nimport { NativeTypes } from 'react-dnd-html5-backend';\nimport Dustbin from './Dustbin';\nimport Box from './Box';\nimport ItemTypes from './ItemTypes';\nimport update from 'immutability-helper';\n\nconst Container = () => {\n  const _useState = useState([{\n    accepts: [ItemTypes.GLASS],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.FOOD],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.PAPER, ItemTypes.GLASS, NativeTypes.URL],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.PAPER, NativeTypes.FILE],\n    lastDroppedItem: null\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dustbins = _useState2[0],\n        setDustbins = _useState2[1];\n\n  const _useState3 = useState([{\n    name: 'Bottle',\n    type: ItemTypes.GLASS\n  }, {\n    name: 'Banana',\n    type: ItemTypes.FOOD\n  }, {\n    name: 'Magazine',\n    type: ItemTypes.PAPER\n  }]),\n        _useState4 = _slicedToArray(_useState3, 1),\n        boxes = _useState4[0];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        droppedBoxNames = _useState6[0],\n        setDroppedBoxNames = _useState6[1];\n\n  function isDropped(boxName) {\n    return droppedBoxNames.indexOf(boxName) > -1;\n  }\n\n  const handleDrop = useCallback((index, item) => {\n    const name = item.name;\n    setDroppedBoxNames(update(droppedBoxNames, name ? {\n      $push: [name]\n    } : {\n      $push: []\n    }));\n    setDustbins(update(dustbins, {\n      [index]: {\n        lastDroppedItem: {\n          $set: item\n        }\n      }\n    }));\n  }, [droppedBoxNames, dustbins]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, dustbins.map(({\n    accepts,\n    lastDroppedItem\n  }, index) => React.createElement(Dustbin, {\n    accept: accepts,\n    lastDroppedItem: lastDroppedItem,\n    onDrop: item => handleDrop(index, item),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, boxes.map(({\n    name,\n    type\n  }, index) => React.createElement(Box, {\n    name: name,\n    type: type,\n    isDropped: isDropped(name),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n};\n\nexport default Container;","map":{"version":3,"sources":["/home/gabriella/Documentos/lar_front_end/src/components/plugin/Container.jsx"],"names":["React","useState","useCallback","NativeTypes","Dustbin","Box","ItemTypes","update","Container","accepts","GLASS","lastDroppedItem","FOOD","PAPER","URL","FILE","dustbins","setDustbins","name","type","boxes","droppedBoxNames","setDroppedBoxNames","isDropped","boxName","indexOf","handleDrop","index","item","$push","$set","overflow","clear","map"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport Dustbin from './Dustbin'\nimport Box from './Box'\nimport ItemTypes from './ItemTypes'\nimport update from 'immutability-helper'\nconst Container = () => {\n  const [dustbins, setDustbins] = useState([\n    { accepts: [ItemTypes.GLASS], lastDroppedItem: null },\n    { accepts: [ItemTypes.FOOD], lastDroppedItem: null },\n    {\n      accepts: [ItemTypes.PAPER, ItemTypes.GLASS, NativeTypes.URL],\n      lastDroppedItem: null,\n    },\n    { accepts: [ItemTypes.PAPER, NativeTypes.FILE], lastDroppedItem: null },\n  ])\n  const [boxes] = useState([\n    { name: 'Bottle', type: ItemTypes.GLASS },\n    { name: 'Banana', type: ItemTypes.FOOD },\n    { name: 'Magazine', type: ItemTypes.PAPER },\n  ])\n  const [droppedBoxNames, setDroppedBoxNames] = useState([])\n  function isDropped(boxName) {\n    return droppedBoxNames.indexOf(boxName) > -1\n  }\n  const handleDrop = useCallback(\n    (index, item) => {\n      const { name } = item\n      setDroppedBoxNames(\n        update(droppedBoxNames, name ? { $push: [name] } : { $push: [] }),\n      )\n      setDustbins(\n        update(dustbins, {\n          [index]: {\n            lastDroppedItem: {\n              $set: item,\n            },\n          },\n        }),\n      )\n    },\n    [droppedBoxNames, dustbins],\n  )\n  return (\n    <div>\n      <div style={{ overflow: 'hidden', clear: 'both' }}>\n        {dustbins.map(({ accepts, lastDroppedItem }, index) => (\n          <Dustbin\n            accept={accepts}\n            lastDroppedItem={lastDroppedItem}\n            onDrop={item => handleDrop(index, item)}\n            key={index}\n          />\n        ))}\n      </div>\n\n      <div style={{ overflow: 'hidden', clear: 'both' }}>\n        {boxes.map(({ name, type }, index) => (\n          <Box\n            name={name}\n            type={type}\n            isDropped={isDropped(name)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\nexport default Container\n"]},"metadata":{},"sourceType":"module"}